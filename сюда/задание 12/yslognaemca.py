#s = '1'*9
#while '111' in s:
#    s = s.replace('111', '22', 1)
#    s = s.replace('222', '11', 1)
#print(s) 221

#111 111 111
#22  111 111
#22  22  111
#11222
#1111
#221

# в этих задачах,нужно сначало сделать легко,посмотреть че буит,а потомуже сложно!
#для себя чекним че будет с 71 72 73
s = '1'*71
while '111' in s:
    s = s.replace('111', '22', 1)
    s = s.replace('222', '11', 1)
print(s) #112 это цифры которые получаются на выходе колво едениц 2

s = '1'*72
while '111' in s:
    s = s.replace('111', '22', 1)
    s = s.replace('222', '11', 1)
print(s) #1121 колво едениц 3

s = '1'*73
while '111' in s:
    s = s.replace('111', '22', 1)
    s = s.replace('222', '11', 1)
print(s) #11211 колво едениц 4

"""
Исполнитель Редактор получает на вход строку цифр и преобразовывает её. 
Редактор может выполнять две команды, в обеих командах v и w обозначают цепочки символов.

1. заменить (v, w)
2. нашлось (v)

Первая команда заменяет в строке первое слева вхождение цепочки v на цепочку w. 
Если цепочки v в строке нет, эта команда не изменяет строку. 
Вторая команда проверяет, встречается ли цепочка v в строке исполнителя Редактор. Дана программа для исполнителя Редактор:

НАЧАЛО
ПОКА нашлось (111)
  заменить (111, 22)
  заменить (222, 11)
КОНЕЦ ПОКА
КОНЕЦ

Известно, что исходная строка содержала более 70 единиц и не содержала других цифр. 
Укажите минимально возможную длину исходной строки, при которой в результате работы этой программы получится строка, 
содержащая максимально возможное количество единиц.
"""

for i in range(71, 1000): #задаем диапозон,ну допустим до касаря.все делаем в этом же цикле
    s = '1'*i
    while '111' in s:
        s = s.replace('111', '22', 1)
        s = s.replace('222', '11', 1)

    print(i, s.count('1'))#выводим изначальное число и количесвто единиц в полученой хуйне.Ответ 73
#71 2
#72 3
#73 4
#74 1
#75 2
#76 2
#77 3
#78 4
#79 1
#80 2